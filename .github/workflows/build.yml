name: Cross-compile ecsctl

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.11']
        include:
          - os: ubuntu-latest
            asset_name: ecsctl-linux
          - os: macos-latest
            asset_name: ecsctl-macos

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

      - name: Run tests
        run: |
          poetry run pytest tests/ --cov=ecsctl --cov-report=xml

      - name: Set version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Update VERSION in __init__.py
          sed -i.bak "s/VERSION = \".*\"/VERSION = \"${GITHUB_REF#refs/tags/v}\"/" ecsctl/__init__.py

      - name: Build executable
        run: poetry run bash build.sh
        env:
          output_name: ${{ matrix.asset_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}

  create-release:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ecsctl-linux/ecsctl-linux
            ecsctl-macos/ecsctl-macos
          draft: false
          prerelease: false
